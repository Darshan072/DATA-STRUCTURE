#define max 5
typedef struct
{

    int data[max];
    int f,r;
}queue;


    init(queue *q)
    {
        q->f=-1;q->r=-1;
        printf("queue is initialize\n");
    }
    insert(queue *q,int val)
    {
        if((q->f==0&&q->r==max-1)||(q->r==q->f-1))
        {
            printf("queue overflow\n");
        }
        else
        {
            if(q->f==-1&&q->r==-1)
                {

                    q->r=0;q->f=0;
                }
                else if(q->r==max-1)
                {

                    q->r=0;
                }
            else
            {

                q->r++;
            }
            q->data[q->r]=val;
            printf("value inserted\n");
        }
}
    int delete(queue *q)
    {
        int val;

        if(q->f==-1&&q->r==-1)
        {
            printf("queue is underflow\n");
        }
        else
        {
            printf("first f value %d",q->f);
            val=q->data[q->f];
            if(q->f==q->r)
            {

                q->f=-1;q->r=-1;
            }
            else if(q->f==max-1)
            {
                printf("value of f %d",q->f);

                q->f=0;
            }

            else
                {

                    q->f++;
                }

        }
        return val;

    }
 int peak(queue *q)
    {
int val;
        if(q->f==-1&&q->r==-1)
        {
            printf("queue is underflow\n");
        }
        else
        {
            val=q->data[q->f];
            printf("value is %d\n",val);

        }
        return 0;
    }
display(queue *q)
{
    int i;
      if(q->f==-1&&q->r==-1)
        {
            printf("queue is empty\n");
        }
     else
     {
         if(q->f<=q->r)
         {
             for(i=q->f;i<=q->r;i++)
         {
             printf("This %d\n",q->data[i]);
         }
         }
         else
            {
                for(i=q->f;i<max;i++)
                {
                    printf("%d\n",q->data[i]);
                }
                for(i=0;i<=q->r;i++)
                {
                    printf("%d\n",q->data[i]);
                }
            }

         }
}

int change(queue *q,int pos,int val)
    {
        if(q->f==-1&&q->r==-1)
        {
            printf("stack is empty");
        }
        else
        {
         int i;
         i=(pos+q->f-1)%max;
         if((q->f<=q->r&&i>=q->f&&i<=q->r)||(q->f>q->r&&((i>q->f&&i<max)||(i>=0&&i<=q->r))))
         {
             q->data[i]=val;
         }
         else
         {
             printf("invalid\n");
         }

        }
     return 0;
 }
